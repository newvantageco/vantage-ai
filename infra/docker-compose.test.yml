version: '3.8'

services:
  # Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: vantage_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "${DB_PORT:-5433}:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6380}:6379"
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API
  api:
    build:
      context: ..
      dockerfile: api/Dockerfile
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/vantage_test
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=test
    env_file:
      - ../api/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Web
  web:
    build:
      context: ..
      dockerfile: web/Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://api:8000
    ports:
      - "${WEB_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://api:8000
    env_file:
      - ../web/.env.local
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Worker (if exists)
  worker:
    build:
      context: ..
      dockerfile: api/Dockerfile
    command: python workers/scheduler_worker.py
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/vantage_test
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=test
    env_file:
      - ../api/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_test_data:
  redis_test_data:
